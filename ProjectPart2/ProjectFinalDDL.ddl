-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-11-29 16:40:17 EST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ml_oz_airline (
    airid       NUMBER(6) NOT NULL,
    airlinename VARCHAR2(30) NOT NULL,
    mainhub     VARCHAR2(50) NOT NULL,
    headquarter VARCHAR2(30) NOT NULL,
    aircountry  VARCHAR2(30) NOT NULL,
    airportcode CHAR(3) NOT NULL
);

COMMENT ON COLUMN ml_oz_airline.airid IS
    'UNique ID assigned to each airline';

COMMENT ON COLUMN ml_oz_airline.airlinename IS
    'the name of the airline';

COMMENT ON COLUMN ml_oz_airline.mainhub IS
    'the main hub of the airlines';

COMMENT ON COLUMN ml_oz_airline.headquarter IS
    'the headquarter city of the airlines';

COMMENT ON COLUMN ml_oz_airline.aircountry IS
    'the country of the airlines main hub';

CREATE UNIQUE INDEX ml_oz_airline__idx ON
    ml_oz_airline (
        airportcode
    ASC );

ALTER TABLE ml_oz_airline ADD CONSTRAINT ml_oz_airline_pk PRIMARY KEY ( airid );

CREATE TABLE ml_oz_airline_model (
    qty     NUMBER(4) NOT NULL,
    airid   NUMBER(6) NOT NULL,
    modelid NUMBER(6) NOT NULL
);

COMMENT ON COLUMN ml_oz_airline_model.qty IS
    'The Quantity airplanes model that ariline have';

ALTER TABLE ml_oz_airline_model ADD CONSTRAINT ml_oz_airline_model_pk PRIMARY KEY ( airid,
                                                                                    modelid );

CREATE TABLE ml_oz_airmodel (
    modelid      NUMBER(6) NOT NULL,
    modelname    VARCHAR2(20) NOT NULL,
    manufacturer VARCHAR2(30) NOT NULL,
    numofengines NUMBER(2) NOT NULL,
    numoffleet   NUMBER(4) NOT NULL
);

COMMENT ON COLUMN ml_oz_airmodel.modelid IS
    'unique ID assigned to each model';

COMMENT ON COLUMN ml_oz_airmodel.modelname IS
    'the model of the aircraft';

COMMENT ON COLUMN ml_oz_airmodel.manufacturer IS
    'the manufacturer of the air craft';

COMMENT ON COLUMN ml_oz_airmodel.numofengines IS
    'the number of the engines in the aircraft';

COMMENT ON COLUMN ml_oz_airmodel.numoffleet IS
    'the number of the fleets';

ALTER TABLE ml_oz_airmodel ADD CONSTRAINT ml_oz_airmodel_pk PRIMARY KEY ( modelid );

CREATE TABLE ml_oz_airp_fl (
    port_type     VARCHAR2(30) NOT NULL,
    arr_dept_time TIMESTAMP WITH TIME ZONE NOT NULL,
    flightid      NUMBER(6) NOT NULL,
    airportcode   CHAR(3) NOT NULL
);

COMMENT ON COLUMN ml_oz_airp_fl.port_type IS
    'THE AIRPORT TYPE';

COMMENT ON COLUMN ml_oz_airp_fl.arr_dept_time IS
    'THE TIME ZONE OF THE DEPARTURE/ ARRIVAL DATE';

CREATE TABLE ml_oz_airport (
    airportcode    CHAR(3) NOT NULL,
    airportname    VARCHAR2(30) NOT NULL,
    airportcity    VARCHAR2(30) NOT NULL,
    airportcountry VARCHAR2(30) NOT NULL,
    airporttype    VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN ml_oz_airport.airportcode IS
    'the aircode of the airport';

COMMENT ON COLUMN ml_oz_airport.airportname IS
    'the name of the airport';

COMMENT ON COLUMN ml_oz_airport.airportcity IS
    'the city of the airport';

COMMENT ON COLUMN ml_oz_airport.airportcountry IS
    'the country of the airport';

COMMENT ON COLUMN ml_oz_airport.airporttype IS
    'type of the airport';

ALTER TABLE ml_oz_airport ADD CONSTRAINT ml_oz_airport_pk PRIMARY KEY ( airportcode );

CREATE TABLE ml_oz_ba (
    passengerid NUMBER(6) NOT NULL,
    baname      VARCHAR2(30) NOT NULL,
    webaddress  VARCHAR2(30) NOT NULL,
    phonenumber VARCHAR2(12) NOT NULL
);

COMMENT ON COLUMN ml_oz_ba.passengerid IS
    'the unqiue ID assigned to each passenger ';

COMMENT ON COLUMN ml_oz_ba.baname IS
    'The name of the  booking agent';

COMMENT ON COLUMN ml_oz_ba.webaddress IS
    'the website of the book agent ';

COMMENT ON COLUMN ml_oz_ba.phonenumber IS
    'the phone number of the booking agent';

ALTER TABLE ml_oz_ba ADD CONSTRAINT ml_oz_ba_pk PRIMARY KEY ( passengerid );

CREATE TABLE ml_oz_cabin_class (
    cc_id   NUMBER(4) NOT NULL,
    cc_name VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN ml_oz_cabin_class.cc_id IS
    'CABIN CLASS ID ASSIGNED TO DIFFERENT CABIN';

COMMENT ON COLUMN ml_oz_cabin_class.cc_name IS
    'the cabin class name';

ALTER TABLE ml_oz_cabin_class ADD CONSTRAINT ml_oz_cabin_class_pk PRIMARY KEY ( cc_id );

CREATE TABLE ml_oz_cus_ins (
    coverageid NUMBER(6) NOT NULL,
    planid     NUMBER(6) NOT NULL,
    customerid NUMBER(6) NOT NULL,
    flightdate DATE NOT NULL,
    flightid   NUMBER(6) NOT NULL
);

ALTER TABLE ml_oz_cus_ins
    ADD CONSTRAINT ml_oz_cus_ins_pk PRIMARY KEY ( planid,
                                                  customerid,
                                                  coverageid,
                                                  flightid,
                                                  flightdate );

CREATE TABLE ml_oz_customer (
    passengerid    NUMBER(6) NOT NULL,
    street         VARCHAR2(50) NOT NULL,
    city           VARCHAR2(30) NOT NULL,
    state          VARCHAR2(20) NOT NULL,
    zipcode        NUMBER(10) NOT NULL,
    country        VARCHAR2(30) NOT NULL,
    email          VARCHAR2(50) NOT NULL,
    contactnumber  VARCHAR2(22) NOT NULL,
    numofpassenger NUMBER(3) NOT NULL,
    efname         VARCHAR2(30) NOT NULL,
    elname         VARCHAR2(30) NOT NULL,
    econtact       VARCHAR2(22) NOT NULL,
    customertype   CHAR(1) NOT NULL
);

ALTER TABLE ml_oz_customer
    ADD CONSTRAINT ch_inh_ml_oz_customer CHECK ( customertype IN ( 'B', 'C', 'M' ) );

COMMENT ON COLUMN ml_oz_customer.passengerid IS
    'the unqiue ID assigned to each passenger ';

COMMENT ON COLUMN ml_oz_customer.street IS
    'street and apartment number of the customers'' address';

COMMENT ON COLUMN ml_oz_customer.city IS
    'Customers'' address city name';

COMMENT ON COLUMN ml_oz_customer.state IS
    'State name of the customer''s address';

COMMENT ON COLUMN ml_oz_customer.zipcode IS
    'zip code of the customer adress.';

COMMENT ON COLUMN ml_oz_customer.country IS
    'The country of the customers'' address';

COMMENT ON COLUMN ml_oz_customer.email IS
    'the email of customer';

COMMENT ON COLUMN ml_oz_customer.contactnumber IS
    'customer''s contact number including country code';

COMMENT ON COLUMN ml_oz_customer.numofpassenger IS
    'number of passenger that customer travel with including her(him)self';

COMMENT ON COLUMN ml_oz_customer.efname IS
    'customer emergency contact first name';

COMMENT ON COLUMN ml_oz_customer.elname IS
    'customer emergency contact last name';

COMMENT ON COLUMN ml_oz_customer.econtact IS
    'customer emergency contact number';

ALTER TABLE ml_oz_customer ADD CONSTRAINT ml_oz_customer_pk PRIMARY KEY ( passengerid );

CREATE TABLE ml_oz_flight (
    flightid     NUMBER(6) NOT NULL,
    flightnumber NUMBER(6) NOT NULL,
    airid        NUMBER(6) NOT NULL
);

COMMENT ON COLUMN ml_oz_flight.flightid IS
    'the unqiue ID assigned to each flight';

COMMENT ON COLUMN ml_oz_flight.flightnumber IS
    'the flight number';

ALTER TABLE ml_oz_flight ADD CONSTRAINT ml_oz_flight_pk PRIMARY KEY ( flightid );

CREATE TABLE ml_oz_ins_inv (
    qty           NUMBER(2) NOT NULL,
    planid        NUMBER(6) NOT NULL,
    invoicenumber NUMBER(6) NOT NULL
);

COMMENT ON COLUMN ml_oz_ins_inv.qty IS
    'HOW MANY TYPE INSURANCE FOR ONE INVOICE';

CREATE TABLE ml_oz_insurance (
    planid      NUMBER(6) NOT NULL,
    planname    VARCHAR2(30) NOT NULL,
    description VARCHAR2(200) NOT NULL,
    cost        NUMBER(7, 2) NOT NULL
);

COMMENT ON COLUMN ml_oz_insurance.planid IS
    'Unique id assigned to each plan';

COMMENT ON COLUMN ml_oz_insurance.planname IS
    'the name of the insurance plan';

COMMENT ON COLUMN ml_oz_insurance.description IS
    'the description of the insurance plan';

COMMENT ON COLUMN ml_oz_insurance.cost IS
    'the cost of the insurance plan';

ALTER TABLE ml_oz_insurance ADD CONSTRAINT ml_oz_insurance_pk PRIMARY KEY ( planid );

CREATE TABLE ml_oz_invoice (
    invoicenumber NUMBER(6) NOT NULL,
    inovicedate   DATE NOT NULL,
    invoiceamount NUMBER(8, 2) NOT NULL
);

COMMENT ON COLUMN ml_oz_invoice.invoicenumber IS
    'the unique invoice number assigned to each invoice';

COMMENT ON COLUMN ml_oz_invoice.inovicedate IS
    'the date of the invoice start';

COMMENT ON COLUMN ml_oz_invoice.invoiceamount IS
    'the invoice amount of the invoice';

ALTER TABLE ml_oz_invoice ADD CONSTRAINT ml_oz_invoice_pk PRIMARY KEY ( invoicenumber );

CREATE TABLE ml_oz_mealplan (
    mp_id     NUMBER(4) NOT NULL,
    "MP-NAME" VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN ml_oz_mealplan.mp_id IS
    'THE UNIQUE ID ASSISNED TO EACH MEAL PLAN';

COMMENT ON COLUMN ml_oz_mealplan."MP-NAME" IS
    'THE MEAL PLAN NAME';

ALTER TABLE ml_oz_mealplan ADD CONSTRAINT ml_oz_mealplan_pk PRIMARY KEY ( mp_id );

CREATE TABLE ml_oz_member (
    passengerid         NUMBER(6) NOT NULL,
    membershipname      VARCHAR2(30) NOT NULL,
    associatedairline   VARCHAR2(30) NOT NULL,
    mstartdate          DATE NOT NULL,
    menddate            DATE,
    ml_oz_airline_airid NUMBER(6) NOT NULL
);

COMMENT ON COLUMN ml_oz_member.passengerid IS
    'the unqiue ID assigned to each passenger ';

COMMENT ON COLUMN ml_oz_member.membershipname IS
    'the name of the membership';

COMMENT ON COLUMN ml_oz_member.associatedairline IS
    'the assocaited airline of the booking agent';

COMMENT ON COLUMN ml_oz_member.mstartdate IS
    'passenger membership start date';

COMMENT ON COLUMN ml_oz_member.menddate IS
    'membership end date';

ALTER TABLE ml_oz_member ADD CONSTRAINT ml_oz_member_pk PRIMARY KEY ( passengerid );

CREATE TABLE ml_oz_pas_ins (
    planid      NUMBER(6) NOT NULL,
    flightid    NUMBER(6) NOT NULL,
    passengerid NUMBER(6) NOT NULL,
    "Date"      DATE NOT NULL
);

ALTER TABLE ml_oz_pas_ins
    ADD CONSTRAINT ml_oz_pas_ins_pk PRIMARY KEY ( planid,
                                                  flightid,
                                                  passengerid,
                                                  "Date" );

CREATE TABLE ml_oz_pasfli_date (
    "Date"      DATE NOT NULL,
    passengerid NUMBER(6) NOT NULL,
    flightid    NUMBER(6) NOT NULL,
    mp_id       NUMBER(4) NOT NULL,
    cc_id       NUMBER(4) NOT NULL,
    request_id  NUMBER(4) NOT NULL
);

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT ml_oz_pasfli_date_pk PRIMARY KEY ( flightid,
                                                      passengerid,
                                                      "Date" );

CREATE TABLE ml_oz_passenger (
    passengerid    NUMBER(6) NOT NULL,
    pfname         VARCHAR2(30) NOT NULL,
    plname         VARCHAR2(30) NOT NULL,
    pbirthdate     DATE NOT NULL,
    pnationality   VARCHAR2(30) NOT NULL,
    pgender        CHAR(1) NOT NULL,
    passportnumber VARCHAR2(9) NOT NULL,
    pexpirydate    DATE NOT NULL,
    passengertype  CHAR(1) NOT NULL
);

ALTER TABLE ml_oz_passenger
    ADD CONSTRAINT ch_inh_ml_oz_passenger CHECK ( passengertype IN ( 'B', 'C', 'M', 'P' ) );

COMMENT ON COLUMN ml_oz_passenger.passengerid IS
    'the unqiue ID assigned to each passenger ';

COMMENT ON COLUMN ml_oz_passenger.pfname IS
    'passenger first name';

COMMENT ON COLUMN ml_oz_passenger.plname IS
    'the last name of the passenger ';

COMMENT ON COLUMN ml_oz_passenger.pbirthdate IS
    'passenger birthday';

COMMENT ON COLUMN ml_oz_passenger.pnationality IS
    'the nationality of the passenger';

COMMENT ON COLUMN ml_oz_passenger.pgender IS
    'the gender of the passenger, enter F for female, enter M for male';

COMMENT ON COLUMN ml_oz_passenger.pexpirydate IS
    'the expiration date of the passport';

ALTER TABLE ml_oz_passenger ADD CONSTRAINT ml_oz_passenger_pk PRIMARY KEY ( passengerid );

CREATE TABLE ml_oz_payment (
    paymentid      NUMBER(6) NOT NULL,
    paymentamount  NUMBER(8, 2) NOT NULL,
    paymentmethod  VARCHAR2(30) NOT NULL,
    cardnumber     NUMBER(16) NOT NULL,
    fnameonc       VARCHAR2(30) NOT NULL,
    lnameonc       VARCHAR2(30) NOT NULL,
    expirationdate DATE NOT NULL,
    invoicenumber  NUMBER(6) NOT NULL,
    paymentdate    DATE NOT NULL
);

COMMENT ON COLUMN ml_oz_payment.paymentid IS
    'the unique ID assigned to each payment';

COMMENT ON COLUMN ml_oz_payment.paymentamount IS
    'the payment amount of the payment';

COMMENT ON COLUMN ml_oz_payment.paymentmethod IS
    'the method of the payment(credit card etc)';

COMMENT ON COLUMN ml_oz_payment.cardnumber IS
    'the card number of the payment card';

COMMENT ON COLUMN ml_oz_payment.fnameonc IS
    'first name of the cardhoider';

COMMENT ON COLUMN ml_oz_payment.lnameonc IS
    'the last name of the card hoider';

COMMENT ON COLUMN ml_oz_payment.expirationdate IS
    'expiration date of the card';

ALTER TABLE ml_oz_payment ADD CONSTRAINT ml_oz_payment_pk PRIMARY KEY ( paymentid );

CREATE TABLE ml_oz_spec_requ (
    request_id   NUMBER(4) NOT NULL,
    request_name VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN ml_oz_spec_requ.request_id IS
    'special request id assisnment to each request';

COMMENT ON COLUMN ml_oz_spec_requ.request_name IS
    'the name of special request';

ALTER TABLE ml_oz_spec_requ ADD CONSTRAINT ml_oz_spec_requ_pk PRIMARY KEY ( request_id );

ALTER TABLE ml_oz_airline
    ADD CONSTRAINT fk_airline_airport FOREIGN KEY ( airportcode )
        REFERENCES ml_oz_airport ( airportcode );

ALTER TABLE ml_oz_airline_model
    ADD CONSTRAINT fk_airline_model FOREIGN KEY ( modelid )
        REFERENCES ml_oz_airmodel ( modelid );

ALTER TABLE ml_oz_airp_fl
    ADD CONSTRAINT fk_airp_flight FOREIGN KEY ( flightid )
        REFERENCES ml_oz_flight ( flightid );

ALTER TABLE ml_oz_ba
    ADD CONSTRAINT fk_ba_customer FOREIGN KEY ( passengerid )
        REFERENCES ml_oz_customer ( passengerid );

ALTER TABLE ml_oz_cus_ins
    ADD CONSTRAINT fk_cus_ins FOREIGN KEY ( customerid )
        REFERENCES ml_oz_customer ( passengerid );

ALTER TABLE ml_oz_member
    ADD CONSTRAINT fk_customer_member FOREIGN KEY ( passengerid )
        REFERENCES ml_oz_customer ( passengerid );

ALTER TABLE ml_oz_customer
    ADD CONSTRAINT fk_customer_passenger FOREIGN KEY ( passengerid )
        REFERENCES ml_oz_passenger ( passengerid );

ALTER TABLE ml_oz_airp_fl
    ADD CONSTRAINT fk_fl_airport FOREIGN KEY ( airportcode )
        REFERENCES ml_oz_airport ( airportcode );

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT fk_fli_pas FOREIGN KEY ( flightid )
        REFERENCES ml_oz_flight ( flightid );

ALTER TABLE ml_oz_flight
    ADD CONSTRAINT fk_flight_airline FOREIGN KEY ( airid )
        REFERENCES ml_oz_airline ( airid );

ALTER TABLE ml_oz_cus_ins
    ADD CONSTRAINT fk_ins_cus FOREIGN KEY ( planid )
        REFERENCES ml_oz_insurance ( planid );

ALTER TABLE ml_oz_ins_inv
    ADD CONSTRAINT fk_ins_inv FOREIGN KEY ( planid )
        REFERENCES ml_oz_insurance ( planid );

ALTER TABLE ml_oz_pas_ins
    ADD CONSTRAINT fk_ins_pas FOREIGN KEY ( planid )
        REFERENCES ml_oz_insurance ( planid );

ALTER TABLE ml_oz_ins_inv
    ADD CONSTRAINT fk_inv_ins FOREIGN KEY ( invoicenumber )
        REFERENCES ml_oz_invoice ( invoicenumber );

ALTER TABLE ml_oz_payment
    ADD CONSTRAINT fk_invoice_payment FOREIGN KEY ( invoicenumber )
        REFERENCES ml_oz_invoice ( invoicenumber );

ALTER TABLE ml_oz_member
    ADD CONSTRAINT fk_member_airline FOREIGN KEY ( ml_oz_airline_airid )
        REFERENCES ml_oz_airline ( airid );

ALTER TABLE ml_oz_airline_model
    ADD CONSTRAINT fk_model_airline FOREIGN KEY ( airid )
        REFERENCES ml_oz_airline ( airid );

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT fk_pas_cc FOREIGN KEY ( cc_id )
        REFERENCES ml_oz_cabin_class ( cc_id );

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT fk_pas_fli FOREIGN KEY ( passengerid )
        REFERENCES ml_oz_passenger ( passengerid );

ALTER TABLE ml_oz_pas_ins
    ADD CONSTRAINT fk_pas_ins FOREIGN KEY ( flightid,
                                            passengerid,
                                            "Date" )
        REFERENCES ml_oz_pasfli_date ( flightid,
                                       passengerid,
                                       "Date" );

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT fk_pas_mealplan FOREIGN KEY ( mp_id )
        REFERENCES ml_oz_mealplan ( mp_id );

ALTER TABLE ml_oz_pasfli_date
    ADD CONSTRAINT fk_pas_req FOREIGN KEY ( request_id )
        REFERENCES ml_oz_spec_requ ( request_id );

CREATE OR REPLACE TRIGGER arc_fkarc_1_ml_oz_ba BEFORE
    INSERT OR UPDATE OF passengerid ON ml_oz_ba
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.customertype
    INTO d
    FROM
        ml_oz_customer a
    WHERE
        a.passengerid = :new.passengerid;

    IF ( d IS NULL OR d <> 'B' ) THEN
        raise_application_error(-20223,
                               'FK FK_BA_CUSTOMER in Table ML_OZ_BA violates Arc constraint on Table ML_OZ_CUSTOMER - discriminator column CustomerType doesn''t have value ''B''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_ml_oz_member BEFORE
    INSERT OR UPDATE OF passengerid ON ml_oz_member
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.customertype
    INTO d
    FROM
        ml_oz_customer a
    WHERE
        a.passengerid = :new.passengerid;

    IF ( d IS NULL OR d <> 'M' ) THEN
        raise_application_error(-20223,
                               'FK FK_Customer_MEMBER in Table ML_OZ_MEMBER violates Arc constraint on Table ML_OZ_CUSTOMER - discriminator column CustomerType doesn''t have value ''M''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            20
-- CREATE INDEX                             1
-- ALTER TABLE                             42
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
